# -- GENERAL -----------------------------

# Hack to share clipboard with osx. See https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
set-option -g default-command "reattach-to-user-namespace -l zsh"

# reload config without killing server
bind r source-file ~/.tmux.conf \; display-message "  Config reloaded..".

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize off

set-option -g mouse on # Enable nice mouse motions
# fix mouse scrolling: enter copy mode on scroll-up, exits it when scrolled to bottom
# bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

set -g history-limit 10000 # increase scrollback buffer size

set -sg escape-time 0 # Don't wait for esc event (must still check this)

# -- DISPLAY -----------------------------

set -g base-index 1       # Zero-based indexing is fine in programming languages, but not so 
setw -g pane-base-index 1 # much in a multiplexer when zero is on the other side of the keyboard.

setw -g automatic-rename on # rename window to reflect current program
set -g renumber-windows on  # renumber windows when a window is closed

set -g focus-events on # focus events enabled for terminals that support them


# -- KEYBINDS ----------------------------

setw -g mode-keys vi # Enable vim navigation in copy mode

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0
set -sg repeat-time 600

# make selecting and 'yanking' more vim-like
# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-selection

# Smart vim-like pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

## -- Pane management --------------------

# better spliting, open new shells in current working directory
unbind %
unbind '"'
bind s split-window -c "#{pane_current_path}" -v # s -> horizontal
bind v split-window -c "#{pane_current_path}" -h # v -> vertical
bind c new-window -c "#{pane_current_path}"      # c -> new window (as usual)

bind = select-layout even-vertical   # evenly spaced vertical layout
bind + select-layout even-horizontal # evenly spaced horizontal layout
bind - break-pane                    # break pane into its own window
bind _ join-pane                     # join a marked pane as a horizntal split

bind S choose-session


# -- PLUGINS ----------------------------

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'nhdaly/tmux-scroll-copy-mode'

set -g @plugin 'jimeh/tmux-themepack'
set -g @themepack 'double/cyan'


run '~/.tmux/plugins/tpm/tpm'